=begin
#Selling Partner API for A+ Content Management

#With the A+ Content API, you can build applications that help selling partners add rich marketing content to their Amazon product detail pages. A+ content helps selling partners share their brand and product story, which helps buyers make informed purchasing decisions. Selling partners assemble content by choosing from content modules and adding images and text.

OpenAPI spec version: 2020-11-01

Generated by: https://github.com/swagger-api/swagger-codegen.git
Swagger Codegen version: 3.0.25
=end

module AmazonSpClients
  module SpAplusContent2020
    class AplusContentApi
      attr_accessor :api_client

      def initialize(api_client = ApiClient.default)
        @api_client = api_client
      end
      # Creates a new A+ Content document.  **Usage Plans:**  | Plan type | Rate (requests per second) | Burst | | ---- | ---- | ---- | |Default| 10 | 10 | |Selling partner specific| Variable | Variable |  The x-amzn-RateLimit-Limit response header returns the usage plan rate limits that were applied to the requested operation. Rate limits for some selling partners will vary from the default rate and burst shown in the table above. For more information, see \"Usage Plans and Rate Limits\" in the Selling Partner API documentation.
      # @param body The content document request details.
      # @param marketplace_id The identifier for the marketplace where the A+ Content is published.
      # @param [Hash] opts the optional parameters
      # @return [PostContentDocumentResponse]
      def create_content_document(body, marketplace_id, opts = {})
        data = create_content_document_with_http_info(body, marketplace_id, opts)
        return data
      end

      # Creates a new A+ Content document.  **Usage Plans:**  | Plan type | Rate (requests per second) | Burst | | ---- | ---- | ---- | |Default| 10 | 10 | |Selling partner specific| Variable | Variable |  The x-amzn-RateLimit-Limit response header returns the usage plan rate limits that were applied to the requested operation. Rate limits for some selling partners will vary from the default rate and burst shown in the table above. For more information, see \&quot;Usage Plans and Rate Limits\&quot; in the Selling Partner API documentation.
      # @param body The content document request details.
      # @param marketplace_id The identifier for the marketplace where the A+ Content is published.
      # @param [Hash] opts the optional parameters
      # @return [Array<(PostContentDocumentResponse)>] PostContentDocumentResponse data, response status code and response headers
      def create_content_document_with_http_info(body, marketplace_id, opts = {})
        if @api_client.config.debugging
          @api_client.config.logger.debug 'Calling API: AplusContentApi.create_content_document ...'
        end
        # verify the required parameter 'body' is set
        if @api_client.config.client_side_validation && body.nil?
          fail ArgumentError, "Missing the required parameter 'body' when calling AplusContentApi.create_content_document"
        end
        # verify the required parameter 'marketplace_id' is set
        if @api_client.config.client_side_validation && marketplace_id.nil?
          fail ArgumentError, "Missing the required parameter 'marketplace_id' when calling AplusContentApi.create_content_document"
        end
        # resource path
        local_var_path = '/aplus/2020-11-01/contentDocuments'

        # query parameters
        query_params = opts[:query_params] || {}
        query_params[:'marketplaceId'] = marketplace_id

        # header parameters
        header_params = opts[:header_params] || {}
        # HTTP header 'Accept' (if needed)
        header_params['Accept'] = @api_client.select_header_accept(['application/json'])
        # HTTP header 'Content-Type'
        header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

        # form parameters
        form_params = opts[:form_params] || {}

        # http body (model)
        post_body = opts[:body] || @api_client.object_to_http_body(body) 

        return_type = opts[:return_type] || 'AmazonSpClients::ApiResponse' 

        auth_names = opts[:auth_names] || []
        data = @api_client.call_api(:POST, local_var_path,
          :header_params => header_params,
          :query_params => query_params,
          :form_params => form_params,
          :body => post_body,
          :auth_names => auth_names,
          :return_type => return_type)

        if @api_client.config.debugging
          @api_client.config.logger.debug "API called: AplusContentApi#create_content_document\nData: #{data.inspect}"
        end
        return data
      end
      # Returns an A+ Content document, if available.  **Usage Plans:**  | Plan type | Rate (requests per second) | Burst | | ---- | ---- | ---- | |Default| 10 | 10 | |Selling partner specific| Variable | Variable |  The x-amzn-RateLimit-Limit response header returns the usage plan rate limits that were applied to the requested operation. Rate limits for some selling partners will vary from the default rate and burst shown in the table above. For more information, see \"Usage Plans and Rate Limits\" in the Selling Partner API documentation.
      # @param content_reference_key The unique reference key for the A+ Content document. A content reference key cannot form a permalink and may change in the future. A content reference key is not guaranteed to match any A+ Content identifier.
      # @param marketplace_id The identifier for the marketplace where the A+ Content is published.
      # @param included_data_set The set of A+ Content data types to include in the response.
      # @param [Hash] opts the optional parameters
      # @return [GetContentDocumentResponse]
      def get_content_document(content_reference_key, marketplace_id, included_data_set, opts = {})
        data = get_content_document_with_http_info(content_reference_key, marketplace_id, included_data_set, opts)
        return data
      end

      # Returns an A+ Content document, if available.  **Usage Plans:**  | Plan type | Rate (requests per second) | Burst | | ---- | ---- | ---- | |Default| 10 | 10 | |Selling partner specific| Variable | Variable |  The x-amzn-RateLimit-Limit response header returns the usage plan rate limits that were applied to the requested operation. Rate limits for some selling partners will vary from the default rate and burst shown in the table above. For more information, see \&quot;Usage Plans and Rate Limits\&quot; in the Selling Partner API documentation.
      # @param content_reference_key The unique reference key for the A+ Content document. A content reference key cannot form a permalink and may change in the future. A content reference key is not guaranteed to match any A+ Content identifier.
      # @param marketplace_id The identifier for the marketplace where the A+ Content is published.
      # @param included_data_set The set of A+ Content data types to include in the response.
      # @param [Hash] opts the optional parameters
      # @return [Array<(GetContentDocumentResponse)>] GetContentDocumentResponse data, response status code and response headers
      def get_content_document_with_http_info(content_reference_key, marketplace_id, included_data_set, opts = {})
        if @api_client.config.debugging
          @api_client.config.logger.debug 'Calling API: AplusContentApi.get_content_document ...'
        end
        # verify the required parameter 'content_reference_key' is set
        if @api_client.config.client_side_validation && content_reference_key.nil?
          fail ArgumentError, "Missing the required parameter 'content_reference_key' when calling AplusContentApi.get_content_document"
        end
        # verify the required parameter 'marketplace_id' is set
        if @api_client.config.client_side_validation && marketplace_id.nil?
          fail ArgumentError, "Missing the required parameter 'marketplace_id' when calling AplusContentApi.get_content_document"
        end
        # verify the required parameter 'included_data_set' is set
        if @api_client.config.client_side_validation && included_data_set.nil?
          fail ArgumentError, "Missing the required parameter 'included_data_set' when calling AplusContentApi.get_content_document"
        end
        # resource path
        local_var_path = '/aplus/2020-11-01/contentDocuments/{contentReferenceKey}'.sub('{' + 'contentReferenceKey' + '}', content_reference_key.to_s)

        # query parameters
        query_params = opts[:query_params] || {}
        query_params[:'marketplaceId'] = marketplace_id
        query_params[:'includedDataSet'] = @api_client.build_collection_param(included_data_set, :csv)

        # header parameters
        header_params = opts[:header_params] || {}
        # HTTP header 'Accept' (if needed)
        header_params['Accept'] = @api_client.select_header_accept(['application/json'])

        # form parameters
        form_params = opts[:form_params] || {}

        # http body (model)
        post_body = opts[:body] 

        return_type = opts[:return_type] || 'AmazonSpClients::ApiResponse' 

        auth_names = opts[:auth_names] || []
        data = @api_client.call_api(:GET, local_var_path,
          :header_params => header_params,
          :query_params => query_params,
          :form_params => form_params,
          :body => post_body,
          :auth_names => auth_names,
          :return_type => return_type)

        if @api_client.config.debugging
          @api_client.config.logger.debug "API called: AplusContentApi#get_content_document\nData: #{data.inspect}"
        end
        return data
      end
      # Returns a list of ASINs related to the specified A+ Content document, if available. If you do not include the asinSet parameter, the operation returns all ASINs related to the content document.  **Usage Plans:**  | Plan type | Rate (requests per second) | Burst | | ---- | ---- | ---- | |Default| 10 | 10 | |Selling partner specific| Variable | Variable |  The x-amzn-RateLimit-Limit response header returns the usage plan rate limits that were applied to the requested operation. Rate limits for some selling partners will vary from the default rate and burst shown in the table above. For more information, see \"Usage Plans and Rate Limits\" in the Selling Partner API documentation.
      # @param content_reference_key The unique reference key for the A+ Content document. A content reference key cannot form a permalink and may change in the future. A content reference key is not guaranteed to match any A+ Content identifier.
      # @param marketplace_id The identifier for the marketplace where the A+ Content is published.
      # @param [Hash] opts the optional parameters
      # @option opts [Array<String>] :included_data_set The set of A+ Content data types to include in the response. If you do not include this parameter, the operation returns the related ASINs without metadata.
      # @option opts [Array<String>] :asin_set The set of ASINs.
      # @option opts [String] :page_token A page token from the nextPageToken response element returned by your previous call to this operation. nextPageToken is returned when the results of a call exceed the page size. To get the next page of results, call the operation and include pageToken as the only parameter. Specifying pageToken with any other parameter will cause the request to fail. When no nextPageToken value is returned there are no more pages to return. A pageToken value is not usable across different operations.
      # @return [ListContentDocumentAsinRelationsResponse]
      def list_content_document_asin_relations(content_reference_key, marketplace_id, opts = {})
        data = list_content_document_asin_relations_with_http_info(content_reference_key, marketplace_id, opts)
        return data
      end

      # Returns a list of ASINs related to the specified A+ Content document, if available. If you do not include the asinSet parameter, the operation returns all ASINs related to the content document.  **Usage Plans:**  | Plan type | Rate (requests per second) | Burst | | ---- | ---- | ---- | |Default| 10 | 10 | |Selling partner specific| Variable | Variable |  The x-amzn-RateLimit-Limit response header returns the usage plan rate limits that were applied to the requested operation. Rate limits for some selling partners will vary from the default rate and burst shown in the table above. For more information, see \&quot;Usage Plans and Rate Limits\&quot; in the Selling Partner API documentation.
      # @param content_reference_key The unique reference key for the A+ Content document. A content reference key cannot form a permalink and may change in the future. A content reference key is not guaranteed to match any A+ Content identifier.
      # @param marketplace_id The identifier for the marketplace where the A+ Content is published.
      # @param [Hash] opts the optional parameters
      # @option opts [Array<String>] :included_data_set The set of A+ Content data types to include in the response. If you do not include this parameter, the operation returns the related ASINs without metadata.
      # @option opts [Array<String>] :asin_set The set of ASINs.
      # @option opts [String] :page_token A page token from the nextPageToken response element returned by your previous call to this operation. nextPageToken is returned when the results of a call exceed the page size. To get the next page of results, call the operation and include pageToken as the only parameter. Specifying pageToken with any other parameter will cause the request to fail. When no nextPageToken value is returned there are no more pages to return. A pageToken value is not usable across different operations.
      # @return [Array<(ListContentDocumentAsinRelationsResponse)>] ListContentDocumentAsinRelationsResponse data, response status code and response headers
      def list_content_document_asin_relations_with_http_info(content_reference_key, marketplace_id, opts = {})
        if @api_client.config.debugging
          @api_client.config.logger.debug 'Calling API: AplusContentApi.list_content_document_asin_relations ...'
        end
        # verify the required parameter 'content_reference_key' is set
        if @api_client.config.client_side_validation && content_reference_key.nil?
          fail ArgumentError, "Missing the required parameter 'content_reference_key' when calling AplusContentApi.list_content_document_asin_relations"
        end
        # verify the required parameter 'marketplace_id' is set
        if @api_client.config.client_side_validation && marketplace_id.nil?
          fail ArgumentError, "Missing the required parameter 'marketplace_id' when calling AplusContentApi.list_content_document_asin_relations"
        end
        if @api_client.config.client_side_validation && opts[:'included_data_set'] && !opts[:'included_data_set'].all? { |item| ['METADATA'].include?(item) }
          fail ArgumentError, 'invalid value for "included_data_set", must include one of METADATA'
        end
        # resource path
        local_var_path = '/aplus/2020-11-01/contentDocuments/{contentReferenceKey}/asins'.sub('{' + 'contentReferenceKey' + '}', content_reference_key.to_s)

        # query parameters
        query_params = opts[:query_params] || {}
        query_params[:'marketplaceId'] = marketplace_id
        query_params[:'includedDataSet'] = @api_client.build_collection_param(opts[:'included_data_set'], :csv) if !opts[:'included_data_set'].nil?
        query_params[:'asinSet'] = @api_client.build_collection_param(opts[:'asin_set'], :csv) if !opts[:'asin_set'].nil?
        query_params[:'pageToken'] = opts[:'page_token'] if !opts[:'page_token'].nil?

        # header parameters
        header_params = opts[:header_params] || {}
        # HTTP header 'Accept' (if needed)
        header_params['Accept'] = @api_client.select_header_accept(['application/json'])

        # form parameters
        form_params = opts[:form_params] || {}

        # http body (model)
        post_body = opts[:body] 

        return_type = opts[:return_type] || 'AmazonSpClients::ApiResponse' 

        auth_names = opts[:auth_names] || []
        data = @api_client.call_api(:GET, local_var_path,
          :header_params => header_params,
          :query_params => query_params,
          :form_params => form_params,
          :body => post_body,
          :auth_names => auth_names,
          :return_type => return_type)

        if @api_client.config.debugging
          @api_client.config.logger.debug "API called: AplusContentApi#list_content_document_asin_relations\nData: #{data.inspect}"
        end
        return data
      end
      # Submits an A+ Content document for review, approval, and publishing.  **Usage Plans:**  | Plan type | Rate (requests per second) | Burst | | ---- | ---- | ---- | |Default| 10 | 10 | |Selling partner specific| Variable | Variable |  The x-amzn-RateLimit-Limit response header returns the usage plan rate limits that were applied to the requested operation. Rate limits for some selling partners will vary from the default rate and burst shown in the table above. For more information, see \"Usage Plans and Rate Limits\" in the Selling Partner API documentation.
      # @param content_reference_key The unique reference key for the A+ Content document. A content reference key cannot form a permalink and may change in the future. A content reference key is not guaranteed to match any A+ content identifier.
      # @param marketplace_id The identifier for the marketplace where the A+ Content is published.
      # @param [Hash] opts the optional parameters
      # @return [PostContentDocumentApprovalSubmissionResponse]
      def post_content_document_approval_submission(content_reference_key, marketplace_id, opts = {})
        data = post_content_document_approval_submission_with_http_info(content_reference_key, marketplace_id, opts)
        return data
      end

      # Submits an A+ Content document for review, approval, and publishing.  **Usage Plans:**  | Plan type | Rate (requests per second) | Burst | | ---- | ---- | ---- | |Default| 10 | 10 | |Selling partner specific| Variable | Variable |  The x-amzn-RateLimit-Limit response header returns the usage plan rate limits that were applied to the requested operation. Rate limits for some selling partners will vary from the default rate and burst shown in the table above. For more information, see \&quot;Usage Plans and Rate Limits\&quot; in the Selling Partner API documentation.
      # @param content_reference_key The unique reference key for the A+ Content document. A content reference key cannot form a permalink and may change in the future. A content reference key is not guaranteed to match any A+ content identifier.
      # @param marketplace_id The identifier for the marketplace where the A+ Content is published.
      # @param [Hash] opts the optional parameters
      # @return [Array<(PostContentDocumentApprovalSubmissionResponse)>] PostContentDocumentApprovalSubmissionResponse data, response status code and response headers
      def post_content_document_approval_submission_with_http_info(content_reference_key, marketplace_id, opts = {})
        if @api_client.config.debugging
          @api_client.config.logger.debug 'Calling API: AplusContentApi.post_content_document_approval_submission ...'
        end
        # verify the required parameter 'content_reference_key' is set
        if @api_client.config.client_side_validation && content_reference_key.nil?
          fail ArgumentError, "Missing the required parameter 'content_reference_key' when calling AplusContentApi.post_content_document_approval_submission"
        end
        # verify the required parameter 'marketplace_id' is set
        if @api_client.config.client_side_validation && marketplace_id.nil?
          fail ArgumentError, "Missing the required parameter 'marketplace_id' when calling AplusContentApi.post_content_document_approval_submission"
        end
        # resource path
        local_var_path = '/aplus/2020-11-01/contentDocuments/{contentReferenceKey}/approvalSubmissions'.sub('{' + 'contentReferenceKey' + '}', content_reference_key.to_s)

        # query parameters
        query_params = opts[:query_params] || {}
        query_params[:'marketplaceId'] = marketplace_id

        # header parameters
        header_params = opts[:header_params] || {}
        # HTTP header 'Accept' (if needed)
        header_params['Accept'] = @api_client.select_header_accept(['application/json'])

        # form parameters
        form_params = opts[:form_params] || {}

        # http body (model)
        post_body = opts[:body] 

        return_type = opts[:return_type] || 'AmazonSpClients::ApiResponse' 

        auth_names = opts[:auth_names] || []
        data = @api_client.call_api(:POST, local_var_path,
          :header_params => header_params,
          :query_params => query_params,
          :form_params => form_params,
          :body => post_body,
          :auth_names => auth_names,
          :return_type => return_type)

        if @api_client.config.debugging
          @api_client.config.logger.debug "API called: AplusContentApi#post_content_document_approval_submission\nData: #{data.inspect}"
        end
        return data
      end
      # Replaces all ASINs related to the specified A+ Content document, if available. This may add or remove ASINs, depending on the current set of related ASINs. Removing an ASIN has the side effect of suspending the content document from that ASIN.  **Usage Plans:**  | Plan type | Rate (requests per second) | Burst | | ---- | ---- | ---- | |Default| 10 | 10 | |Selling partner specific| Variable | Variable |  The x-amzn-RateLimit-Limit response header returns the usage plan rate limits that were applied to the requested operation. Rate limits for some selling partners will vary from the default rate and burst shown in the table above. For more information, see \"Usage Plans and Rate Limits\" in the Selling Partner API documentation.
      # @param body The content document ASIN relations request details.
      # @param marketplace_id The identifier for the marketplace where the A+ Content is published.
      # @param content_reference_key The unique reference key for the A+ Content document. A content reference key cannot form a permalink and may change in the future. A content reference key is not guaranteed to match any A+ content identifier.
      # @param [Hash] opts the optional parameters
      # @return [PostContentDocumentAsinRelationsResponse]
      def post_content_document_asin_relations(body, marketplace_id, content_reference_key, opts = {})
        data = post_content_document_asin_relations_with_http_info(body, marketplace_id, content_reference_key, opts)
        return data
      end

      # Replaces all ASINs related to the specified A+ Content document, if available. This may add or remove ASINs, depending on the current set of related ASINs. Removing an ASIN has the side effect of suspending the content document from that ASIN.  **Usage Plans:**  | Plan type | Rate (requests per second) | Burst | | ---- | ---- | ---- | |Default| 10 | 10 | |Selling partner specific| Variable | Variable |  The x-amzn-RateLimit-Limit response header returns the usage plan rate limits that were applied to the requested operation. Rate limits for some selling partners will vary from the default rate and burst shown in the table above. For more information, see \&quot;Usage Plans and Rate Limits\&quot; in the Selling Partner API documentation.
      # @param body The content document ASIN relations request details.
      # @param marketplace_id The identifier for the marketplace where the A+ Content is published.
      # @param content_reference_key The unique reference key for the A+ Content document. A content reference key cannot form a permalink and may change in the future. A content reference key is not guaranteed to match any A+ content identifier.
      # @param [Hash] opts the optional parameters
      # @return [Array<(PostContentDocumentAsinRelationsResponse)>] PostContentDocumentAsinRelationsResponse data, response status code and response headers
      def post_content_document_asin_relations_with_http_info(body, marketplace_id, content_reference_key, opts = {})
        if @api_client.config.debugging
          @api_client.config.logger.debug 'Calling API: AplusContentApi.post_content_document_asin_relations ...'
        end
        # verify the required parameter 'body' is set
        if @api_client.config.client_side_validation && body.nil?
          fail ArgumentError, "Missing the required parameter 'body' when calling AplusContentApi.post_content_document_asin_relations"
        end
        # verify the required parameter 'marketplace_id' is set
        if @api_client.config.client_side_validation && marketplace_id.nil?
          fail ArgumentError, "Missing the required parameter 'marketplace_id' when calling AplusContentApi.post_content_document_asin_relations"
        end
        # verify the required parameter 'content_reference_key' is set
        if @api_client.config.client_side_validation && content_reference_key.nil?
          fail ArgumentError, "Missing the required parameter 'content_reference_key' when calling AplusContentApi.post_content_document_asin_relations"
        end
        # resource path
        local_var_path = '/aplus/2020-11-01/contentDocuments/{contentReferenceKey}/asins'.sub('{' + 'contentReferenceKey' + '}', content_reference_key.to_s)

        # query parameters
        query_params = opts[:query_params] || {}
        query_params[:'marketplaceId'] = marketplace_id

        # header parameters
        header_params = opts[:header_params] || {}
        # HTTP header 'Accept' (if needed)
        header_params['Accept'] = @api_client.select_header_accept(['application/json'])
        # HTTP header 'Content-Type'
        header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

        # form parameters
        form_params = opts[:form_params] || {}

        # http body (model)
        post_body = opts[:body] || @api_client.object_to_http_body(body) 

        return_type = opts[:return_type] || 'AmazonSpClients::ApiResponse' 

        auth_names = opts[:auth_names] || []
        data = @api_client.call_api(:POST, local_var_path,
          :header_params => header_params,
          :query_params => query_params,
          :form_params => form_params,
          :body => post_body,
          :auth_names => auth_names,
          :return_type => return_type)

        if @api_client.config.debugging
          @api_client.config.logger.debug "API called: AplusContentApi#post_content_document_asin_relations\nData: #{data.inspect}"
        end
        return data
      end
      # Submits a request to suspend visible A+ Content. This neither deletes the content document nor the ASIN relations.  **Usage Plans:**  | Plan type | Rate (requests per second) | Burst | | ---- | ---- | ---- | |Default| 10 | 10 | |Selling partner specific| Variable | Variable |  The x-amzn-RateLimit-Limit response header returns the usage plan rate limits that were applied to the requested operation. Rate limits for some selling partners will vary from the default rate and burst shown in the table above. For more information, see \"Usage Plans and Rate Limits\" in the Selling Partner API documentation.
      # @param content_reference_key The unique reference key for the A+ Content document. A content reference key cannot form a permalink and may change in the future. A content reference key is not guaranteed to match any A+ content identifier.
      # @param marketplace_id The identifier for the marketplace where the A+ Content is published.
      # @param [Hash] opts the optional parameters
      # @return [PostContentDocumentSuspendSubmissionResponse]
      def post_content_document_suspend_submission(content_reference_key, marketplace_id, opts = {})
        data = post_content_document_suspend_submission_with_http_info(content_reference_key, marketplace_id, opts)
        return data
      end

      # Submits a request to suspend visible A+ Content. This neither deletes the content document nor the ASIN relations.  **Usage Plans:**  | Plan type | Rate (requests per second) | Burst | | ---- | ---- | ---- | |Default| 10 | 10 | |Selling partner specific| Variable | Variable |  The x-amzn-RateLimit-Limit response header returns the usage plan rate limits that were applied to the requested operation. Rate limits for some selling partners will vary from the default rate and burst shown in the table above. For more information, see \&quot;Usage Plans and Rate Limits\&quot; in the Selling Partner API documentation.
      # @param content_reference_key The unique reference key for the A+ Content document. A content reference key cannot form a permalink and may change in the future. A content reference key is not guaranteed to match any A+ content identifier.
      # @param marketplace_id The identifier for the marketplace where the A+ Content is published.
      # @param [Hash] opts the optional parameters
      # @return [Array<(PostContentDocumentSuspendSubmissionResponse)>] PostContentDocumentSuspendSubmissionResponse data, response status code and response headers
      def post_content_document_suspend_submission_with_http_info(content_reference_key, marketplace_id, opts = {})
        if @api_client.config.debugging
          @api_client.config.logger.debug 'Calling API: AplusContentApi.post_content_document_suspend_submission ...'
        end
        # verify the required parameter 'content_reference_key' is set
        if @api_client.config.client_side_validation && content_reference_key.nil?
          fail ArgumentError, "Missing the required parameter 'content_reference_key' when calling AplusContentApi.post_content_document_suspend_submission"
        end
        # verify the required parameter 'marketplace_id' is set
        if @api_client.config.client_side_validation && marketplace_id.nil?
          fail ArgumentError, "Missing the required parameter 'marketplace_id' when calling AplusContentApi.post_content_document_suspend_submission"
        end
        # resource path
        local_var_path = '/aplus/2020-11-01/contentDocuments/{contentReferenceKey}/suspendSubmissions'.sub('{' + 'contentReferenceKey' + '}', content_reference_key.to_s)

        # query parameters
        query_params = opts[:query_params] || {}
        query_params[:'marketplaceId'] = marketplace_id

        # header parameters
        header_params = opts[:header_params] || {}
        # HTTP header 'Accept' (if needed)
        header_params['Accept'] = @api_client.select_header_accept(['application/json'])

        # form parameters
        form_params = opts[:form_params] || {}

        # http body (model)
        post_body = opts[:body] 

        return_type = opts[:return_type] || 'AmazonSpClients::ApiResponse' 

        auth_names = opts[:auth_names] || []
        data = @api_client.call_api(:POST, local_var_path,
          :header_params => header_params,
          :query_params => query_params,
          :form_params => form_params,
          :body => post_body,
          :auth_names => auth_names,
          :return_type => return_type)

        if @api_client.config.debugging
          @api_client.config.logger.debug "API called: AplusContentApi#post_content_document_suspend_submission\nData: #{data.inspect}"
        end
        return data
      end
      # Returns a list of all A+ Content documents assigned to a selling partner. This operation returns only the metadata of the A+ Content documents. Call the getContentDocument operation to get the actual contents of the A+ Content documents.  **Usage Plans:**  | Plan type | Rate (requests per second) | Burst | | ---- | ---- | ---- | |Default| 10 | 10 | |Selling partner specific| Variable | Variable |  The x-amzn-RateLimit-Limit response header returns the usage plan rate limits that were applied to the requested operation. Rate limits for some selling partners will vary from the default rate and burst shown in the table above. For more information, see \"Usage Plans and Rate Limits\" in the Selling Partner API documentation.
      # @param marketplace_id The identifier for the marketplace where the A+ Content is published.
      # @param [Hash] opts the optional parameters
      # @option opts [String] :page_token A page token from the nextPageToken response element returned by your previous call to this operation. nextPageToken is returned when the results of a call exceed the page size. To get the next page of results, call the operation and include pageToken as the only parameter. Specifying pageToken with any other parameter will cause the request to fail. When no nextPageToken value is returned there are no more pages to return. A pageToken value is not usable across different operations.
      # @return [SearchContentDocumentsResponse]
      def search_content_documents(marketplace_id, opts = {})
        data = search_content_documents_with_http_info(marketplace_id, opts)
        return data
      end

      # Returns a list of all A+ Content documents assigned to a selling partner. This operation returns only the metadata of the A+ Content documents. Call the getContentDocument operation to get the actual contents of the A+ Content documents.  **Usage Plans:**  | Plan type | Rate (requests per second) | Burst | | ---- | ---- | ---- | |Default| 10 | 10 | |Selling partner specific| Variable | Variable |  The x-amzn-RateLimit-Limit response header returns the usage plan rate limits that were applied to the requested operation. Rate limits for some selling partners will vary from the default rate and burst shown in the table above. For more information, see \&quot;Usage Plans and Rate Limits\&quot; in the Selling Partner API documentation.
      # @param marketplace_id The identifier for the marketplace where the A+ Content is published.
      # @param [Hash] opts the optional parameters
      # @option opts [String] :page_token A page token from the nextPageToken response element returned by your previous call to this operation. nextPageToken is returned when the results of a call exceed the page size. To get the next page of results, call the operation and include pageToken as the only parameter. Specifying pageToken with any other parameter will cause the request to fail. When no nextPageToken value is returned there are no more pages to return. A pageToken value is not usable across different operations.
      # @return [Array<(SearchContentDocumentsResponse)>] SearchContentDocumentsResponse data, response status code and response headers
      def search_content_documents_with_http_info(marketplace_id, opts = {})
        if @api_client.config.debugging
          @api_client.config.logger.debug 'Calling API: AplusContentApi.search_content_documents ...'
        end
        # verify the required parameter 'marketplace_id' is set
        if @api_client.config.client_side_validation && marketplace_id.nil?
          fail ArgumentError, "Missing the required parameter 'marketplace_id' when calling AplusContentApi.search_content_documents"
        end
        # resource path
        local_var_path = '/aplus/2020-11-01/contentDocuments'

        # query parameters
        query_params = opts[:query_params] || {}
        query_params[:'marketplaceId'] = marketplace_id
        query_params[:'pageToken'] = opts[:'page_token'] if !opts[:'page_token'].nil?

        # header parameters
        header_params = opts[:header_params] || {}
        # HTTP header 'Accept' (if needed)
        header_params['Accept'] = @api_client.select_header_accept(['application/json'])

        # form parameters
        form_params = opts[:form_params] || {}

        # http body (model)
        post_body = opts[:body] 

        return_type = opts[:return_type] || 'AmazonSpClients::ApiResponse' 

        auth_names = opts[:auth_names] || []
        data = @api_client.call_api(:GET, local_var_path,
          :header_params => header_params,
          :query_params => query_params,
          :form_params => form_params,
          :body => post_body,
          :auth_names => auth_names,
          :return_type => return_type)

        if @api_client.config.debugging
          @api_client.config.logger.debug "API called: AplusContentApi#search_content_documents\nData: #{data.inspect}"
        end
        return data
      end
      # Searches for A+ Content publishing records, if available.  **Usage Plans:**  | Plan type | Rate (requests per second) | Burst | | ---- | ---- | ---- | |Default| 10 | 10 | |Selling partner specific| Variable | Variable |  The x-amzn-RateLimit-Limit response header returns the usage plan rate limits that were applied to the requested operation. Rate limits for some selling partners will vary from the default rate and burst shown in the table above. For more information, see \"Usage Plans and Rate Limits\" in the Selling Partner API documentation.
      # @param marketplace_id The identifier for the marketplace where the A+ Content is published.
      # @param asin The Amazon Standard Identification Number (ASIN).
      # @param [Hash] opts the optional parameters
      # @option opts [String] :page_token A page token from the nextPageToken response element returned by your previous call to this operation. nextPageToken is returned when the results of a call exceed the page size. To get the next page of results, call the operation and include pageToken as the only parameter. Specifying pageToken with any other parameter will cause the request to fail. When no nextPageToken value is returned there are no more pages to return. A pageToken value is not usable across different operations.
      # @return [SearchContentPublishRecordsResponse]
      def search_content_publish_records(marketplace_id, asin, opts = {})
        data = search_content_publish_records_with_http_info(marketplace_id, asin, opts)
        return data
      end

      # Searches for A+ Content publishing records, if available.  **Usage Plans:**  | Plan type | Rate (requests per second) | Burst | | ---- | ---- | ---- | |Default| 10 | 10 | |Selling partner specific| Variable | Variable |  The x-amzn-RateLimit-Limit response header returns the usage plan rate limits that were applied to the requested operation. Rate limits for some selling partners will vary from the default rate and burst shown in the table above. For more information, see \&quot;Usage Plans and Rate Limits\&quot; in the Selling Partner API documentation.
      # @param marketplace_id The identifier for the marketplace where the A+ Content is published.
      # @param asin The Amazon Standard Identification Number (ASIN).
      # @param [Hash] opts the optional parameters
      # @option opts [String] :page_token A page token from the nextPageToken response element returned by your previous call to this operation. nextPageToken is returned when the results of a call exceed the page size. To get the next page of results, call the operation and include pageToken as the only parameter. Specifying pageToken with any other parameter will cause the request to fail. When no nextPageToken value is returned there are no more pages to return. A pageToken value is not usable across different operations.
      # @return [Array<(SearchContentPublishRecordsResponse)>] SearchContentPublishRecordsResponse data, response status code and response headers
      def search_content_publish_records_with_http_info(marketplace_id, asin, opts = {})
        if @api_client.config.debugging
          @api_client.config.logger.debug 'Calling API: AplusContentApi.search_content_publish_records ...'
        end
        # verify the required parameter 'marketplace_id' is set
        if @api_client.config.client_side_validation && marketplace_id.nil?
          fail ArgumentError, "Missing the required parameter 'marketplace_id' when calling AplusContentApi.search_content_publish_records"
        end
        # verify the required parameter 'asin' is set
        if @api_client.config.client_side_validation && asin.nil?
          fail ArgumentError, "Missing the required parameter 'asin' when calling AplusContentApi.search_content_publish_records"
        end
        # resource path
        local_var_path = '/aplus/2020-11-01/contentPublishRecords'

        # query parameters
        query_params = opts[:query_params] || {}
        query_params[:'marketplaceId'] = marketplace_id
        query_params[:'asin'] = asin
        query_params[:'pageToken'] = opts[:'page_token'] if !opts[:'page_token'].nil?

        # header parameters
        header_params = opts[:header_params] || {}
        # HTTP header 'Accept' (if needed)
        header_params['Accept'] = @api_client.select_header_accept(['application/json'])

        # form parameters
        form_params = opts[:form_params] || {}

        # http body (model)
        post_body = opts[:body] 

        return_type = opts[:return_type] || 'AmazonSpClients::ApiResponse' 

        auth_names = opts[:auth_names] || []
        data = @api_client.call_api(:GET, local_var_path,
          :header_params => header_params,
          :query_params => query_params,
          :form_params => form_params,
          :body => post_body,
          :auth_names => auth_names,
          :return_type => return_type)

        if @api_client.config.debugging
          @api_client.config.logger.debug "API called: AplusContentApi#search_content_publish_records\nData: #{data.inspect}"
        end
        return data
      end
      # Updates an existing A+ Content document.  **Usage Plans:**  | Plan type | Rate (requests per second) | Burst | | ---- | ---- | ---- | |Default| 10 | 10 | |Selling partner specific| Variable | Variable |  The x-amzn-RateLimit-Limit response header returns the usage plan rate limits that were applied to the requested operation. Rate limits for some selling partners will vary from the default rate and burst shown in the table above. For more information, see \"Usage Plans and Rate Limits\" in the Selling Partner API documentation.
      # @param body The content document request details.
      # @param marketplace_id The identifier for the marketplace where the A+ Content is published.
      # @param content_reference_key The unique reference key for the A+ Content document. A content reference key cannot form a permalink and may change in the future. A content reference key is not guaranteed to match any A+ Content identifier.
      # @param [Hash] opts the optional parameters
      # @return [PostContentDocumentResponse]
      def update_content_document(body, marketplace_id, content_reference_key, opts = {})
        data = update_content_document_with_http_info(body, marketplace_id, content_reference_key, opts)
        return data
      end

      # Updates an existing A+ Content document.  **Usage Plans:**  | Plan type | Rate (requests per second) | Burst | | ---- | ---- | ---- | |Default| 10 | 10 | |Selling partner specific| Variable | Variable |  The x-amzn-RateLimit-Limit response header returns the usage plan rate limits that were applied to the requested operation. Rate limits for some selling partners will vary from the default rate and burst shown in the table above. For more information, see \&quot;Usage Plans and Rate Limits\&quot; in the Selling Partner API documentation.
      # @param body The content document request details.
      # @param marketplace_id The identifier for the marketplace where the A+ Content is published.
      # @param content_reference_key The unique reference key for the A+ Content document. A content reference key cannot form a permalink and may change in the future. A content reference key is not guaranteed to match any A+ Content identifier.
      # @param [Hash] opts the optional parameters
      # @return [Array<(PostContentDocumentResponse)>] PostContentDocumentResponse data, response status code and response headers
      def update_content_document_with_http_info(body, marketplace_id, content_reference_key, opts = {})
        if @api_client.config.debugging
          @api_client.config.logger.debug 'Calling API: AplusContentApi.update_content_document ...'
        end
        # verify the required parameter 'body' is set
        if @api_client.config.client_side_validation && body.nil?
          fail ArgumentError, "Missing the required parameter 'body' when calling AplusContentApi.update_content_document"
        end
        # verify the required parameter 'marketplace_id' is set
        if @api_client.config.client_side_validation && marketplace_id.nil?
          fail ArgumentError, "Missing the required parameter 'marketplace_id' when calling AplusContentApi.update_content_document"
        end
        # verify the required parameter 'content_reference_key' is set
        if @api_client.config.client_side_validation && content_reference_key.nil?
          fail ArgumentError, "Missing the required parameter 'content_reference_key' when calling AplusContentApi.update_content_document"
        end
        # resource path
        local_var_path = '/aplus/2020-11-01/contentDocuments/{contentReferenceKey}'.sub('{' + 'contentReferenceKey' + '}', content_reference_key.to_s)

        # query parameters
        query_params = opts[:query_params] || {}
        query_params[:'marketplaceId'] = marketplace_id

        # header parameters
        header_params = opts[:header_params] || {}
        # HTTP header 'Accept' (if needed)
        header_params['Accept'] = @api_client.select_header_accept(['application/json'])
        # HTTP header 'Content-Type'
        header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

        # form parameters
        form_params = opts[:form_params] || {}

        # http body (model)
        post_body = opts[:body] || @api_client.object_to_http_body(body) 

        return_type = opts[:return_type] || 'AmazonSpClients::ApiResponse' 

        auth_names = opts[:auth_names] || []
        data = @api_client.call_api(:POST, local_var_path,
          :header_params => header_params,
          :query_params => query_params,
          :form_params => form_params,
          :body => post_body,
          :auth_names => auth_names,
          :return_type => return_type)

        if @api_client.config.debugging
          @api_client.config.logger.debug "API called: AplusContentApi#update_content_document\nData: #{data.inspect}"
        end
        return data
      end
      # Checks if the A+ Content document is valid for use on a set of ASINs.  **Usage Plans:**  | Plan type | Rate (requests per second) | Burst | | ---- | ---- | ---- | |Default| 10 | 10 | |Selling partner specific| Variable | Variable |  The x-amzn-RateLimit-Limit response header returns the usage plan rate limits that were applied to the requested operation. Rate limits for some selling partners will vary from the default rate and burst shown in the table above. For more information, see \"Usage Plans and Rate Limits\" in the Selling Partner API documentation.
      # @param body The content document request details.
      # @param marketplace_id The identifier for the marketplace where the A+ Content is published.
      # @param [Hash] opts the optional parameters
      # @option opts [Array<String>] :asin_set The set of ASINs.
      # @return [ValidateContentDocumentAsinRelationsResponse]
      def validate_content_document_asin_relations(body, marketplace_id, opts = {})
        data = validate_content_document_asin_relations_with_http_info(body, marketplace_id, opts)
        return data
      end

      # Checks if the A+ Content document is valid for use on a set of ASINs.  **Usage Plans:**  | Plan type | Rate (requests per second) | Burst | | ---- | ---- | ---- | |Default| 10 | 10 | |Selling partner specific| Variable | Variable |  The x-amzn-RateLimit-Limit response header returns the usage plan rate limits that were applied to the requested operation. Rate limits for some selling partners will vary from the default rate and burst shown in the table above. For more information, see \&quot;Usage Plans and Rate Limits\&quot; in the Selling Partner API documentation.
      # @param body The content document request details.
      # @param marketplace_id The identifier for the marketplace where the A+ Content is published.
      # @param [Hash] opts the optional parameters
      # @option opts [Array<String>] :asin_set The set of ASINs.
      # @return [Array<(ValidateContentDocumentAsinRelationsResponse)>] ValidateContentDocumentAsinRelationsResponse data, response status code and response headers
      def validate_content_document_asin_relations_with_http_info(body, marketplace_id, opts = {})
        if @api_client.config.debugging
          @api_client.config.logger.debug 'Calling API: AplusContentApi.validate_content_document_asin_relations ...'
        end
        # verify the required parameter 'body' is set
        if @api_client.config.client_side_validation && body.nil?
          fail ArgumentError, "Missing the required parameter 'body' when calling AplusContentApi.validate_content_document_asin_relations"
        end
        # verify the required parameter 'marketplace_id' is set
        if @api_client.config.client_side_validation && marketplace_id.nil?
          fail ArgumentError, "Missing the required parameter 'marketplace_id' when calling AplusContentApi.validate_content_document_asin_relations"
        end
        # resource path
        local_var_path = '/aplus/2020-11-01/contentAsinValidations'

        # query parameters
        query_params = opts[:query_params] || {}
        query_params[:'marketplaceId'] = marketplace_id
        query_params[:'asinSet'] = @api_client.build_collection_param(opts[:'asin_set'], :csv) if !opts[:'asin_set'].nil?

        # header parameters
        header_params = opts[:header_params] || {}
        # HTTP header 'Accept' (if needed)
        header_params['Accept'] = @api_client.select_header_accept(['application/json'])
        # HTTP header 'Content-Type'
        header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

        # form parameters
        form_params = opts[:form_params] || {}

        # http body (model)
        post_body = opts[:body] || @api_client.object_to_http_body(body) 

        return_type = opts[:return_type] || 'AmazonSpClients::ApiResponse' 

        auth_names = opts[:auth_names] || []
        data = @api_client.call_api(:POST, local_var_path,
          :header_params => header_params,
          :query_params => query_params,
          :form_params => form_params,
          :body => post_body,
          :auth_names => auth_names,
          :return_type => return_type)

        if @api_client.config.debugging
          @api_client.config.logger.debug "API called: AplusContentApi#validate_content_document_asin_relations\nData: #{data.inspect}"
        end
        return data
      end
    end
  end
end
