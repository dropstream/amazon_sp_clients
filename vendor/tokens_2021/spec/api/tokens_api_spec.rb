=begin
#Selling Partner API for Tokens 

#The Selling Partner API for Tokens provides a secure way to access a customers's PII (Personally Identifiable Information). You can call the Tokens API to get a Restricted Data Token (RDT) for one or more restricted resources that you specify. The RDT authorizes you to make subsequent requests to access these restricted resources.

OpenAPI spec version: 2021-03-01

Generated by: https://github.com/swagger-api/swagger-codegen.git
Swagger Codegen version: 3.0.25
=end

require 'spec_helper'
require 'json'

# Unit tests for AmazonSpClients::SpTokens2021::TokensApi
# Automatically generated by swagger-codegen (github.com/swagger-api/swagger-codegen)
# Please update as you see appropriate
describe 'TokensApi' do
  before do
    # run before each test
    @instance = AmazonSpClients::SpTokens2021::TokensApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of TokensApi' do
    it 'should create an instance of TokensApi' do
      expect(@instance).to be_instance_of(AmazonSpClients::SpTokens2021::TokensApi)
    end
  end

  # unit tests for create_restricted_data_token
  # Returns a Restricted Data Token (RDT) for one or more restricted resources that you specify. A restricted resource is the HTTP method and path from a restricted operation that returns Personally Identifiable Information (PII). See the Tokens API Use Case Guide for a list of restricted operations. Use the RDT returned here as the access token in subsequent calls to the corresponding restricted operations.  The path of a restricted resource can be: - A specific path containing a seller&#x27;s order ID, for example &#x60;&#x60;&#x60;/orders/v0/orders/902-3159896-1390916/address&#x60;&#x60;&#x60;. The returned RDT authorizes a subsequent call to the getOrderAddress operation of the Orders API for that specific order only. For example, &#x60;&#x60;&#x60;GET /orders/v0/orders/902-3159896-1390916/address&#x60;&#x60;&#x60;. - A generic path that does not contain a seller&#x27;s order ID, for example&#x60;&#x60;&#x60;/orders/v0/orders/{orderId}/address&#x60;&#x60;&#x60;). The returned RDT authorizes subsequent calls to the getOrderAddress operation for *any* of a seller&#x27;s order IDs. For example, &#x60;&#x60;&#x60;GET /orders/v0/orders/902-3159896-1390916/address&#x60;&#x60;&#x60; and &#x60;&#x60;&#x60;GET /orders/v0/orders/483-3488972-0896720/address&#x60;&#x60;&#x60;  **Usage Plans:**  | Plan type | Rate (requests per second) | Burst | | ---- | ---- | ---- | |Default| 1 | 10 | |Selling partner specific| Variable | Variable |  The x-amzn-RateLimit-Limit response header returns the usage plan rate limits that were applied to the requested operation. Rate limits for some selling partners will vary from the default rate and burst shown in the table above. For more information, see \&quot;Usage Plans and Rate Limits\&quot; in the Selling Partner API documentation.
  # @param body The restricted data token request details.
  # @param [Hash] opts the optional parameters
  # @return [CreateRestrictedDataTokenResponse]
  describe 'create_restricted_data_token test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
